angular.module("ng-loading-wrapper",["ng-loading-wrapper.directives","ng-loading-wrapper.services"]),angular.module("ng-loading-wrapper.directives",[]),angular.module("ng-loading-wrapper.services",[]),angular.module("ng-loading-wrapper.directives").run(["$templateCache",function(e){e.put("directives/ng-loading-wrapper.template.html","")}]),angular.module("ng-loading-wrapper.directives").directive("ngLoadingWrapper",[function(){return{restrict:"C",link:function(e,n,a){console.log("ngLoadingWrapper appended loading element.");var i=angular.element(n),r=angular.element('<div class="loading-pane"></div>'),l=angular.element('<div class="loading-object"></div>'),o=angular.element('<div class="loading-spinner"></div>'),d=angular.element('<div class="loading-text">'+a.loadingText+"</div>");l.append(o).append(d),r.append(l),i.append(i),e.$on("$destroy",function(){r.remove(),console.log("ngLoadingWrapper remove loading element.")})}}}]),angular.module("ng-loading-wrapper.services").service("ngLoadingWrapper",["$compile",function(a){var i=this;this.applyLoading=function(e){var n=angular.element(e);n.addClass("ng-loading-wrapper"),a(n)(n.scope())},this.removeLoading=function(e){var n=angular.element(e);n.removeClass("ng-loading-wrapper"),a(n)(n.scope())},this.loadWhile=function(e,n){i.applyLoading(e),Promise.all(n).finally(function(){i.removeLoading(e)})}}]);